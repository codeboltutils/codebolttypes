{"success":true,"data":{"id":18,"name":"GetSnapShot","category_id":12,"category_name":"Browser","description":"Retrieves a snapshot of the current page.","short_description":"Get page snapshot with DOM structure","function":"codebolt.browser.getSnapShot()","examples":"// Navigate to a page\nawait codebolt.browser.goToPage(\"https://example.com\");\n\n// Wait for page to load\nawait new Promise(resolve => setTimeout(resolve, 2000));\n\n// Get a snapshot of the current page\nconst snapshotResult = await codebolt.browser.getSnapShot();\nconsole.log('âœ… Snapshot taken:', snapshotResult);\n\n// The snapshot contains comprehensive page state information\nif (snapshotResult.success && snapshotResult.payload?.tree) {\n    const tree = snapshotResult.payload.tree;\n    console.log('Snapshot data available for analysis:', {\n        documentsCount: tree.documents?.length || 0,\n        stringsCount: tree.strings?.length || 0,\n        hasNodeData: !!tree.documents?.[0]?.nodes\n    });\n    // Process the snapshot data as needed\n} else {\n    console.error('Failed to get snapshot:', snapshotResult.error);\n}","tags":"getSnapShot","created_at":"2025-07-09 11:44:07","updated_at":"2025-07-09 11:44:07","input_zod_schema":{},"output_zod_schema":{},"input_example":"const snapshotResult = await codebolt.browser.getSnapShot();","output_example":"{\n  \"type\": \"getSnapShotResponse\",\n  \"payload\": {\n    \"tree\": {\n      \"strings\": [\"html\", \"head\", \"title\", \"Example\", \"body\", \"h1\", \"Welcome\", \"p\", \"content\"],\n      \"documents\": [\n        {\n          \"nodes\": {\n            \"backendNodeId\": [1, 2, 3, 4, 5],\n            \"attributes\": [[], [], [], [], []],\n            \"nodeValue\": [-1, -1, -1, 3, -1],\n            \"parentIndex\": [-1, 0, 1, 2, 1],\n            \"nodeType\": [9, 1, 1, 3, 1],\n            \"nodeName\": [0, 1, 2, 3, 4],\n            \"isClickable\": {},\n            \"textValue\": {\n              \"3\": \"Example Page\"\n            },\n            \"inputValue\": {},\n            \"inputChecked\": {}\n          }\n        }\n      ]\n    },\n    \"success\": true,\n    \"content\": \"Snapshot captured successfully\"\n  },\n  \"eventId\": \"getSnapShot_123456\",\n  \"success\": true,\n  \"message\": \"Snapshot retrieved successfully\",\n  \"messageId\": \"msg_123456\",\n  \"threadId\": \"thread_789\"\n}","input_json_schema":"{\n  \"type\": \"object\",\n  \"properties\": {},\n  \"required\": [],\n  \"additionalProperties\": false\n}","output_json_schema":"{\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\n      \"type\": \"string\",\n      \"const\": \"getSnapShotResponse\",\n      \"description\": \"Always 'getSnapShotResponse'.\"\n    },\n    \"payload\": {\n      \"type\": \"object\",\n      \"description\": \"Contains the response data including DOM tree structure.\",\n      \"properties\": {\n        \"tree\": {\n          \"type\": \"object\",\n          \"description\": \"DOM tree structure with comprehensive page information.\",\n          \"properties\": {\n            \"strings\": {\n              \"type\": \"array\",\n              \"items\": { \"type\": \"string\" },\n              \"description\": \"Array of strings used in the DOM tree.\"\n            },\n            \"documents\": {\n              \"type\": \"array\",\n              \"description\": \"Array of document objects containing node information.\",\n              \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"nodes\": {\n                    \"type\": \"object\",\n                    \"description\": \"Node information including IDs, attributes, values, and structure.\",\n                    \"properties\": {\n                      \"backendNodeId\": {\n                        \"type\": \"array\",\n                        \"items\": { \"type\": \"number\" },\n                        \"description\": \"Backend node identifiers.\"\n                      },\n                      \"attributes\": {\n                        \"type\": \"array\",\n                        \"description\": \"Element attributes with name/value pairs.\"\n                      },\n                      \"nodeValue\": {\n                        \"type\": \"array\",\n                        \"items\": { \"type\": \"number\" },\n                        \"description\": \"Node values.\"\n                      },\n                      \"isClickable\": {\n                        \"type\": \"object\",\n                        \"description\": \"Clickable element information.\"\n                      },\n                      \"textValue\": {\n                        \"type\": \"object\",\n                        \"description\": \"Text content values.\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"eventId\": {\n      \"type\": \"string\",\n      \"description\": \"Event identifier for the action.\"\n    },\n    \"success\": {\n      \"type\": \"boolean\",\n      \"description\": \"Indicates if the operation was successful.\"\n    },\n    \"message\": {\n      \"type\": \"string\",\n      \"description\": \"A message with additional information.\"\n    },\n    \"error\": {\n      \"type\": \"string\",\n      \"description\": \"Error details if the operation failed.\"\n    },\n    \"messageId\": {\n      \"type\": \"string\",\n      \"description\": \"A unique identifier for the message.\"\n    },\n    \"threadId\": {\n      \"type\": \"string\",\n      \"description\": \"The thread identifier.\"\n    }\n  },\n  \"required\": [\"type\"],\n  \"additionalProperties\": false\n}","input_variable_description":"This method takes no parameters and retrieves a comprehensive snapshot of the current page's DOM structure.","output_variable_description":{},"additional_notes":{},"mcp_server_name":"codebolt--browser-getSnapShot","mcp_server_function":{},"common_use_cases":{},"raw_content":"---\nname: getSnapShot\ncbbaseinfo:\n  description: Retrieves a snapshot of the current page.\ncbparameters:\n  parameters: []\n  returns:\n    signatureTypeName: Promise<any>\n    description: 'A promise that resolves with the snapshot data.'\n    typeArgs: []\ndata:\n  name: getSnapShot\n  category: browser\n  link: getSnapShot.md\n---\n\n### Response Structure\n\nThe method returns a Promise that resolves to a `BrowserSnapshotResponse` object with the following properties:\n\n- **`type`** (string): Always \"getSnapShotResponse\".\n- **`payload`** (object, optional): Contains the response data including DOM tree structure\n- **`eventId`** (string, optional): Event identifier for the action\n- **`success`** (boolean, optional): Indicates if the operation was successful\n- **`message`** (string, optional): A message with additional information\n- **`error`** (string, optional): Error details if the operation failed\n- **`messageId`** (string, optional): A unique identifier for the message\n- **`threadId`** (string, optional): The thread identifier\n\n### Notes\n\n- The snapshot provides a complete structural representation of the page's DOM\n- This is useful for page analysis, element detection, and automated testing\n- The tree structure includes element hierarchy, attributes, and interactive states\n- The response contains detailed information about clickable elements and input values"}}