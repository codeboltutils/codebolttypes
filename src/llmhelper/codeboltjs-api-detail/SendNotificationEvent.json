{"success":true,"data":{"id":35,"name":"SendNotificationEvent","category_id":14,"category_name":"Chat","description":"Sends a notification event to the server.","short_description":"Send typed notification event","function":"codebolt.chat.sendNotificationEvent(notificationMessage: string, type: 'debug' | 'git' | 'planner' | 'browser' | 'editor' | 'terminal' | 'preview')","examples":"// Send a debug notification\ncodebolt.chat.sendNotificationEvent(\"File processing complete\", \"debug\");\n\n// Send a terminal notification\ncodebolt.chat.sendNotificationEvent(\"Command executed successfully\", \"terminal\");\n\n// Send a git notification\ncodebolt.chat.sendNotificationEvent(\"Repository cloned successfully\", \"git\");\n\n// Send a browser notification\ncodebolt.chat.sendNotificationEvent(\"Page loaded successfully\", \"browser\");\n\n// Send an editor notification\ncodebolt.chat.sendNotificationEvent(\"File saved successfully\", \"editor\");\n\n// Send a planner notification\ncodebolt.chat.sendNotificationEvent(\"Task completed\", \"planner\");\n\n// Send a preview notification\ncodebolt.chat.sendNotificationEvent(\"Preview updated\", \"preview\");","tags":"sendNotificationEvent","created_at":"2025-07-09 12:34:36","updated_at":"2025-07-09 12:34:36","input_zod_schema":{},"output_zod_schema":{},"input_example":"codebolt.chat.sendNotificationEvent(\"Operation completed\", \"debug\");","output_example":"void","input_json_schema":"{\n  \"type\": \"object\",\n  \"properties\": {\n    \"notificationMessage\": {\n      \"type\": \"string\",\n      \"description\": \"The message to be sent in the notification.\",\n      \"minLength\": 1\n    },\n    \"type\": {\n      \"type\": \"string\",\n      \"enum\": [\"debug\", \"git\", \"planner\", \"browser\", \"editor\", \"terminal\", \"preview\"],\n      \"description\": \"The type of notification to send.\"\n    }\n  },\n  \"required\": [\"notificationMessage\", \"type\"],\n  \"additionalProperties\": false\n}","output_json_schema":"{\n  \"type\": \"null\",\n  \"description\": \"This method returns void and does not provide a response.\"\n}","input_variable_description":"The `notificationMessage` parameter is required and contains the notification text. The `type` parameter is required and must be one of: 'debug', 'git', 'planner', 'browser', 'editor', 'terminal', or 'preview'.","output_variable_description":{},"additional_notes":{},"mcp_server_name":"codebolt--chat-sendNotificationEvent","mcp_server_function":{},"common_use_cases":{},"raw_content":"---\nname: sendNotificationEvent\ncbbaseinfo:\n  description: Sends a notification event to the server.\ncbparameters:\n  parameters:\n    - name: notificationMessage\n      typeName: string\n      description: The message to be sent in the notification.\n    - name: type\n      typeName: \"'debug' | 'git' | 'planner' | 'browser' | 'editor' | 'terminal' | 'preview'\"\n      description: The type of notification to send.\n  returns:\n    signatureTypeName: void\n    description: ' '\n    typeArgs: []\ndata:\n  name: sendNotificationEvent\n  category: chat\n  link: sendNotificationEvent.md\n---\n\n### Response Structure\n\nThis method returns `void` and does not provide a response. The notification event is sent immediately when the method is called.\n\n### Explanation\n\nThe `sendNotificationEvent` function sends a notification event to the server with a specified message and type. This allows you to communicate different types of events or status updates to the user through the Codebolt interface."}}