{"success":true,"data":{"id":19,"name":"GetUrl","category_id":12,"category_name":"Browser","description":"Gets the current URL of the active browser page.","short_description":"Get current page URL","function":"codebolt.browser.getUrl()","examples":"// First, create a new page and navigate to a URL.\nawait codebolt.browser.newPage();\nawait codebolt.browser.goToPage('https://www.google.com');\n\n// Now, get the current URL.\nconst urlResponse = await codebolt.browser.getUrl();\nconsole.log('URL Response:', urlResponse);\n\nif (urlResponse.success) {\n  console.log('The current URL is:', urlResponse.url);\n  // You can use this URL to verify navigation or for other purposes.\n  if (urlResponse.url.includes('google.com')) {\n    console.log('Successfully navigated to Google.');\n  }\n} else {\n  console.error('Failed to get URL:', urlResponse.error);\n}","tags":"getUrl","created_at":"2025-07-09 11:44:09","updated_at":"2025-07-09 11:44:09","input_zod_schema":{},"output_zod_schema":{},"input_example":"const urlResponse = await codebolt.browser.getUrl();","output_example":"{\n  \"type\": \"getUrlResponse\",\n  \"url\": \"https://www.google.com\",\n  \"currentUrl\": \"https://www.google.com\",\n  \"success\": true,\n  \"message\": \"URL retrieved successfully\",\n  \"messageId\": \"msg_123456\",\n  \"threadId\": \"thread_789\"\n}","input_json_schema":"{\n  \"type\": \"object\",\n  \"properties\": {},\n  \"required\": [],\n  \"additionalProperties\": false\n}","output_json_schema":"{\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\n      \"type\": \"string\",\n      \"const\": \"getUrlResponse\",\n      \"description\": \"Always 'getUrlResponse'.\"\n    },\n    \"url\": {\n      \"type\": \"string\",\n      \"description\": \"The current URL of the page.\"\n    },\n    \"currentUrl\": {\n      \"type\": \"string\",\n      \"description\": \"An alias for the current URL.\"\n    },\n    \"success\": {\n      \"type\": \"boolean\",\n      \"description\": \"Indicates if the operation was successful.\"\n    },\n    \"message\": {\n      \"type\": \"string\",\n      \"description\": \"A message with additional information.\"\n    },\n    \"error\": {\n      \"type\": \"string\",\n      \"description\": \"Error details if the operation failed.\"\n    },\n    \"messageId\": {\n      \"type\": \"string\",\n      \"description\": \"A unique identifier for the message.\"\n    },\n    \"threadId\": {\n      \"type\": \"string\",\n      \"description\": \"The thread identifier.\"\n    }\n  },\n  \"required\": [\"type\"],\n  \"additionalProperties\": false\n}","input_variable_description":"This method takes no parameters and returns the current URL of the active browser page.","output_variable_description":{},"additional_notes":{},"mcp_server_name":"codebolt--browser-getUrl","mcp_server_function":{},"common_use_cases":{},"raw_content":"---\nname: getUrl\ncbbaseinfo:\n  description: Gets the current URL of the active browser page.\ncbparameters:\n  parameters: []\n  returns:\n    signatureTypeName: Promise<UrlResponse>\n    description: A promise that resolves with a `UrlResponse` object containing the current URL.\ndata:\n  name: getUrl\n  category: browser\n  link: getUrl.md\n---\n\n### Response Structure\n\nThe method returns a Promise that resolves to a `UrlResponse` object with the following properties:\n\n- **`type`** (string): Always \"getUrlResponse\".\n- **`url`** (string, optional): The current URL of the page.\n- **`currentUrl`** (string, optional): An alias for the current URL.\n- **`success`** (boolean, optional): Indicates if the operation was successful\n- **`message`** (string, optional): A message with additional information\n- **`error`** (string, optional): Error details if the operation failed\n- **`messageId`** (string, optional): A unique identifier for the message\n- **`threadId`** (string, optional): The thread identifier\n\n### Explanation\n\nThe `codebolt.browser.getUrl()` function is essential for tracking the browser's current location. It's commonly used after a navigation action (like `goToPage` or `click`) to confirm that the browser has loaded the correct page. The returned `UrlResponse` object provides the URL and other useful metadata."}}