{"success":true,"data":{"id":29,"name":"GetProjectState","category_id":13,"category_name":"CBState","description":"Retrieves the current project state from the server via WebSocket.","short_description":"Get current project state","function":"codebolt.cbstate.getProjectState()","examples":"// Get complete project information\nconst projectState = await codebolt.cbstate.getProjectState();\n\nconsole.log('Response type:', projectState.type); // 'getProjectStateResponse'\nconsole.log('Project data:', projectState.projectState);\n\n// Access basic project details\nconst projectPath = projectState.projectState.projectPath;\nconst projectName = projectState.projectState.projectName;\nconst tokenUsed = projectState.projectState.token_used;\n\nconsole.log(`Project Name: ${projectName}`);\nconsole.log(`Project Path: ${projectPath}`);\nconsole.log(`Tokens Used: ${tokenUsed}`);\n\n// Access custom project settings\nconst state = projectState.projectState.state;\nif (state.project_name) {\n    console.log('Custom Project Name:', state.project_name);\n}\nif (state.version) {\n    console.log('Project Version:', state.version);\n}\nif (state.environment) {\n    console.log('Environment:', state.environment);\n}","tags":"getProjectState","created_at":"2025-07-09 12:27:01","updated_at":"2025-07-09 12:27:01","input_zod_schema":{},"output_zod_schema":{},"input_example":"const projectState = await codebolt.cbstate.getProjectState();","output_example":"{\n  \"type\": \"getProjectStateResponse\",\n  \"projectState\": {\n    \"token_used\": 0,\n    \"chats\": [],\n    \"projectPath\": \"C:\\\\path\\\\to\\\\project\",\n    \"projectName\": \"project-name\",\n    \"state\": {\n      \"activeAgent\": false,\n      \"currentLayout\": {},\n      \"pinnedAgent\": [],\n      \"project_name\": \"My Awesome Project\",\n      \"version\": \"1.0.0\",\n      \"environment\": \"development\",\n      \"ui_config\": \"{\\\"theme\\\":\\\"dark\\\",\\\"features\\\":[\\\"autocomplete\\\"]}\"\n    }\n  }\n}","input_json_schema":"{\n  \"type\": \"object\",\n  \"properties\": {},\n  \"required\": [],\n  \"additionalProperties\": false\n}","output_json_schema":"{\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\n      \"type\": \"string\",\n      \"const\": \"getProjectStateResponse\",\n      \"description\": \"Always 'getProjectStateResponse'.\"\n    },\n    \"projectState\": {\n      \"type\": \"object\",\n      \"description\": \"Contains the complete project state.\",\n      \"properties\": {\n        \"token_used\": {\n          \"type\": \"number\",\n          \"description\": \"Number of tokens consumed in the current project.\"\n        },\n        \"chats\": {\n          \"type\": \"array\",\n          \"description\": \"Array of chat sessions associated with this project.\"\n        },\n        \"projectPath\": {\n          \"type\": \"string\",\n          \"description\": \"Full path to the current project directory.\"\n        },\n        \"projectName\": {\n          \"type\": \"string\",\n          \"description\": \"Name of the current project.\"\n        },\n        \"state\": {\n          \"type\": \"object\",\n          \"description\": \"Nested object containing custom project state data.\",\n          \"additionalProperties\": true\n        }\n      }\n    },\n    \"success\": {\n      \"type\": \"boolean\",\n      \"description\": \"Indicates if the operation was successful.\"\n    },\n    \"message\": {\n      \"type\": \"string\",\n      \"description\": \"A message with additional information.\"\n    },\n    \"error\": {\n      \"type\": \"string\",\n      \"description\": \"Error details if the operation failed.\"\n    },\n    \"messageId\": {\n      \"type\": \"string\",\n      \"description\": \"A unique identifier for the message.\"\n    },\n    \"threadId\": {\n      \"type\": \"string\",\n      \"description\": \"The thread identifier.\"\n    }\n  },\n  \"required\": [\"type\"],\n  \"additionalProperties\": false\n}","input_variable_description":"This method takes no parameters and retrieves comprehensive information about the current project including system information and custom data.","output_variable_description":{},"additional_notes":{},"mcp_server_name":"codebolt--cbstate-getProjectState","mcp_server_function":{},"common_use_cases":{},"raw_content":"---\nname: getProjectState\ncbbaseinfo:\n  description: Retrieves the current project state from the server via WebSocket.\ncbparameters:\n  parameters: []\n  returns:\n    signatureTypeName: Promise\n    description: A promise that resolves with the project state containing project information, token usage, chats, and all custom project state data.\n    typeArgs:\n      - type: reference\n        name: GetProjectStateResponse\ndata:\n  name: getProjectState\n  category: cbstate\n  link: getProjectState.md\n---\n\n### Response Structure\n\nThe method returns a Promise that resolves to a `GetProjectStateResponse` object with the following properties:\n\n- **`type`** (string): Always \"getProjectStateResponse\".\n- **`projectState`** (object, optional): Contains the complete project state including project information, token usage, chats, and custom project state data.\n- **`success`** (boolean, optional): Indicates if the operation was successful.\n- **`message`** (string, optional): A message with additional information.\n- **`error`** (string, optional): Error details if the operation failed.\n- **`messageId`** (string, optional): A unique identifier for the message.\n- **`threadId`** (string, optional): The thread identifier.\n\n## What is getProjectState?\n\nThe `getProjectState` function allows you to retrieve comprehensive information about your current project, including both system information (like project path and token usage) and any custom data you've stored using `updateProjectState`. Think of it as getting a complete snapshot of your project's current status and configuration.\n\n**Key Points:**\n- ðŸ“Š **Complete project overview** - Get all project information in one call\n- ðŸ’¾ **Persistent data** - Access data that survives across sessions\n- ðŸ”§ **System + Custom data** - Both built-in project info and your custom settings\n- ðŸ“ˆ **Usage tracking** - Monitor token consumption and chat history"}}