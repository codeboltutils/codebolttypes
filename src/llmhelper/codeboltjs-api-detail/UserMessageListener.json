{"success":true,"data":{"id":36,"name":"UserMessageListener","category_id":14,"category_name":"Chat","description":"Sets up a listener for incoming WebSocket messages and emits a custom event when a message is received.","short_description":"Listen for incoming user messages","function":"codebolt.chat.userMessageListener()","examples":"// Set up a user message listener\nconst emitter = codebolt.chat.userMessageListener();\n\n// Listen for custom events\nemitter.on('message', (message) => {\n  console.log('Received message:', message);\n});\n\n// Listen for specific message types\nemitter.on('user_input', (data) => {\n  console.log('User input received:', data);\n});\n\n// Handle different event types\nemitter.on('message', (message) => {\n  switch(message.type) {\n    case 'user_message':\n      console.log('User said:', message.content);\n      break;\n    case 'system_message':\n      console.log('System notification:', message.content);\n      break;\n    default:\n      console.log('Unknown message type:', message);\n  }\n});\n\n// Clean up listener when done\nemitter.removeAllListeners();","tags":"userMessageListener","created_at":"2025-07-09 12:34:38","updated_at":"2025-07-09 12:34:38","input_zod_schema":{},"output_zod_schema":{},"input_example":"const emitter = codebolt.chat.userMessageListener();","output_example":"EventEmitter","input_json_schema":"{\n  \"type\": \"object\",\n  \"properties\": {},\n  \"required\": [],\n  \"additionalProperties\": false\n}","output_json_schema":"{\n  \"type\": \"object\",\n  \"description\": \"An event emitter that can be used to listen for incoming WebSocket messages.\",\n  \"properties\": {\n    \"on\": {\n      \"type\": \"function\",\n      \"description\": \"Method to register event listeners.\"\n    },\n    \"removeAllListeners\": {\n      \"type\": \"function\",\n      \"description\": \"Method to remove all registered listeners.\"\n    }\n  }\n}","input_variable_description":"This method takes no parameters and sets up a listener for incoming WebSocket messages.","output_variable_description":{},"additional_notes":{},"mcp_server_name":"codebolt--chat-userMessageListener","mcp_server_function":{},"common_use_cases":{},"raw_content":"---\nname: userMessageListener\ncbbaseinfo:\n  description: >-\n    Sets up a listener for incoming WebSocket messages and emits a custom event\n    when a message is received.\ncbparameters:\n  parameters: []\n  returns:\n    description: The event emitter used for emitting custom events.\n    typeArgs: []\ndata:\n  name: userMessageListener\n  category: chat\n  link: userMessageListener.md\n---\n\n### Response Structure\n\nThis method returns an event emitter that can be used to listen for incoming WebSocket messages. The emitter allows you to set up custom event handlers for processing messages.\n\n### Explanation\n\nThis function sets up a listener for incoming WebSocket messages and returns an event emitter for handling custom events when messages are received."}}