{"success":true,"data":{"id":81,"name":"add_file","category_id":24,"category_name":"RAG","description":"Adds a file to the CodeBolt File System for RAG (Retrieval-Augmented Generation) processing and knowledge indexing.","short_description":"Adds a file to the CodeBolt File System for RAG (Retrieval-Augmented Generation) processing and knowledge indexing.","function":"codebolt.rag.add_file(filename: string, file_path: string) -> void","examples":[{"title":"Adding files to RAG system","code":"// Add a single file to the RAG system\nawait codebolt.rag.add_file('example.txt', '/path/to/file');\nconsole.log('‚úÖ File added successfully to RAG system');\n\n// Add multiple files for knowledge indexing\nconst filesToAdd = [\n  { name: 'README.md', path: '/project/README.md' },\n  { name: 'docs.md', path: '/project/docs/docs.md' },\n  { name: 'api.md', path: '/project/api/api.md' }\n];\n\nfor (const file of filesToAdd) {\n  await codebolt.rag.add_file(file.name, file.path);\n  console.log(`üìÑ Added ${file.name} to RAG system`);\n}\nconsole.log('‚úÖ All files added to knowledge base');"},{"title":"Error handling for file addition","code":"const addFileWithErrorHandling = async (filename, filePath) => {\n  try {\n    await codebolt.rag.add_file(filename, filePath);\n    console.log(`‚úÖ Successfully added ${filename} to RAG system`);\n    return { success: true, filename };\n  } catch (error) {\n    console.error(`‚ùå Failed to add ${filename}:`, error.message);\n    return { success: false, filename, error: error.message };\n  }\n};\n\n// Usage example\nconst result = await addFileWithErrorHandling('document.pdf', '/docs/document.pdf');\nif (result.success) {\n  console.log('File processing completed');\n} else {\n  console.log('File processing failed:', result.error);\n}"}],"tags":[],"created_at":"2025-07-10 07:31:29","updated_at":"2025-07-10 07:31:29","input_zod_schema":{},"output_zod_schema":{},"input_example":{},"output_example":{},"input_json_schema":{"type":"object","properties":{"filename":{"type":"string","description":"The name of the file to add to the RAG system"},"file_path":{"type":"string","description":"The full path where the file is located"}},"required":["filename","file_path"]},"output_json_schema":{"type":"null","description":"This function returns void - no return value"},"input_variable_description":{},"output_variable_description":{},"additional_notes":{},"mcp_server_name":"codebolt--rag-add_file","mcp_server_function":{},"common_use_cases":{},"raw_content":"---\nname: add_file\ncbbaseinfo:\n  description: Adds a file to the CodeBolt File System.\ncbparameters:\n  parameters:\n    - name: filename\n      typeName: string\n      description: The name of the file to add.\n    - name: file_path\n      typeName: string\n      description: The path where the file should be added.\n  returns:\n    signatureTypeName: void\n    description: ' '\n    typeArgs: []\ndata:\n  name: add_file\n  category: rag\n  link: add_file.md\n---"}}