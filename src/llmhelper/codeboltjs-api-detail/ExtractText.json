{"success":true,"data":{"id":11,"name":"ExtractText","category_id":12,"category_name":"Browser","description":"Extracts text from the current page.","short_description":"Extract all text content from the current page","function":"codebolt.browser.extractText()","examples":"// Navigate to the page\nawait codebolt.browser.goToPage(\"https://example.com\");\n\n// Wait for page to load\nawait new Promise(resolve => setTimeout(resolve, 2000));\n\n// Extract all text from the current page\nconst textResult = await codebolt.browser.extractText();\nconsole.log('âœ… Text extracted:', {\n    success: textResult.success,\n    textLength: textResult.text ? textResult.text.length : 0\n});\n\n// Access the extracted text\nif (textResult.success && textResult.text) {\n    console.log('Extracted text:', textResult.text);\n    // Process the text as needed for analysis or storage\n} else {\n    console.error('Failed to extract text:', textResult.error);\n}","tags":"extractText","created_at":"2025-07-09 11:43:57","updated_at":"2025-07-09 11:43:57","input_zod_schema":{},"output_zod_schema":{},"input_example":"const textResult = await codebolt.browser.extractText();","output_example":"{\n  \"type\": \"extractTextResponse\",\n  \"text\": \"Welcome to Example.com\\n\\nThis is a sample webpage with various content sections.\\n\\nAbout Us\\nWe provide excellent services...\\n\\nContact Information\\nEmail: info@example.com\\nPhone: +1-555-0123\",\n  \"content\": \"Welcome to Example.com\\n\\nThis is a sample webpage with various content sections.\\n\\nAbout Us\\nWe provide excellent services...\\n\\nContact Information\\nEmail: info@example.com\\nPhone: +1-555-0123\",\n  \"success\": true,\n  \"message\": \"Text extracted successfully\",\n  \"messageId\": \"msg_123456\",\n  \"threadId\": \"thread_789\"\n}","input_json_schema":"{\n  \"type\": \"object\",\n  \"properties\": {},\n  \"required\": [],\n  \"additionalProperties\": false\n}","output_json_schema":"{\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\n      \"type\": \"string\",\n      \"const\": \"extractTextResponse\",\n      \"description\": \"Always 'extractTextResponse'.\"\n    },\n    \"text\": {\n      \"type\": \"string\",\n      \"description\": \"The extracted text content from the current page.\"\n    },\n    \"content\": {\n      \"type\": \"string\",\n      \"description\": \"Alternative property for the extracted text.\"\n    },\n    \"success\": {\n      \"type\": \"boolean\",\n      \"description\": \"Indicates if the operation was successful.\"\n    },\n    \"message\": {\n      \"type\": \"string\",\n      \"description\": \"A message with additional information.\"\n    },\n    \"error\": {\n      \"type\": \"string\",\n      \"description\": \"Error details if the operation failed.\"\n    },\n    \"messageId\": {\n      \"type\": \"string\",\n      \"description\": \"A unique identifier for the message.\"\n    },\n    \"threadId\": {\n      \"type\": \"string\",\n      \"description\": \"The thread identifier.\"\n    }\n  },\n  \"required\": [\"type\"],\n  \"additionalProperties\": false\n}","input_variable_description":"This method takes no parameters and extracts all readable text content from the current webpage.","output_variable_description":{},"additional_notes":{},"mcp_server_name":"codebolt--browser-extractText","mcp_server_function":{},"common_use_cases":{},"raw_content":"---\nname: extractText\ncbbaseinfo:\n  description: Extracts text from the current page.\ncbparameters:\n  parameters: []\n  returns:\n    signatureTypeName: Promise<ExtractTextResponse>\n    description: 'A promise that resolves with the extracted text from the page.'\n    typeArgs: []\ndata:\n  name: extractText\n  category: browser\n  link: extractText.md\n---\n\n### Response Structure\n\nThe method returns a Promise that resolves to an `ExtractTextResponse` object with the following properties:\n\n- **`type`** (string): Always \"extractTextResponse\".\n- **`text`** (string, optional): The extracted text content from the current page\n- **`content`** (string, optional): Alternative property for the extracted text\n- **`success`** (boolean, optional): Indicates if the operation was successful\n- **`message`** (string, optional): A message with additional information\n- **`error`** (string, optional): Error details if the operation failed\n- **`messageId`** (string, optional): A unique identifier for the message\n- **`threadId`** (string, optional): The thread identifier\n\n### Explanation \n\nThe `codebolt.browser.extractText()` function extracts all readable text content from the current webpage. This function returns a promise that resolves with an object containing a `success` boolean and the extracted `text`. The function removes HTML markup and returns only the human-readable text that would be visible to a user browsing the page. This is particularly useful for content analysis, text mining, data extraction, generating summaries of webpage content, or when you need clean text without HTML formatting for further processing or analysis."}}