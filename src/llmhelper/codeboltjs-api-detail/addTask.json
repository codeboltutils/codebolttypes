{"success":true,"data":{"id":83,"name":"addTask","category_id":25,"category_name":"TaskPlanner","description":"Adds a new task to the task management system via WebSocket communication. This method creates a new task with the provided description and stores it in the system for tracking and management.","short_description":"Adds a new task to the task management system via WebSocket communication. This method creates a new task with the provided description and stores it in the system for tracking and management.","function":"codebolt.taskplaner.addTask(task: string) -> Promise<AddTaskResponse>","examples":[{"title":"Basic task addition and validation","code":"// Basic task addition\nconst addResult = await codebolt.taskplaner.addTask('Complete project documentation');\nconsole.log('✅ Task added successfully');\nconsole.log('New task:', addResult.task);\nconsole.log('Task ID:', addResult.task?.id);\n\n// Add task with error handling\nconst addTaskSafely = async (taskDescription) => {\n  try {\n    const result = await codebolt.taskplaner.addTask(taskDescription);\n    \n    if (result.success) {\n      console.log('✅ Task added successfully');\n      console.log('Task details:', result.task);\n      return result.task;\n    } else {\n      console.error('❌ Failed to add task:', result.error);\n      return null;\n    }\n  } catch (error) {\n    console.error('❌ Exception while adding task:', error.message);\n    return null;\n  }\n};\n\nconst newTask = await addTaskSafely('Review code changes');"},{"title":"Multiple tasks and categorized tasks","code":"// Add multiple tasks in sequence\nconst addMultipleTasks = async (taskDescriptions) => {\n  const results = [];\n  \n  for (const description of taskDescriptions) {\n    try {\n      const result = await codebolt.taskplaner.addTask(description);\n      results.push({\n        description,\n        success: result.success,\n        task: result.task,\n        error: result.error\n      });\n      \n      console.log(`${result.success ? '✅' : '❌'} ${description}`);\n    } catch (error) {\n      console.error(`❌ Failed to add \"${description}\":`, error);\n    }\n  }\n  \n  return results;\n};\n\n// Usage\nconst tasks = [\n  'Review code changes',\n  'Update unit tests', \n  'Fix bug in authentication module',\n  'Prepare release notes'\n];\n\nconst addResults = await addMultipleTasks(tasks);\nconsole.log('✅ Multiple tasks added:', addResults.length);"}],"tags":[],"created_at":"2025-07-10 07:34:57","updated_at":"2025-07-10 07:34:57","input_zod_schema":{},"output_zod_schema":{},"input_example":{},"output_example":{},"input_json_schema":{"type":"object","properties":{"task":{"type":"string","description":"The task description to be added. This should be a clear, descriptive string that explains what needs to be accomplished."}},"required":["task"]},"output_json_schema":{"type":"object","properties":{"type":{"type":"string","enum":["addTaskResponse"]},"task":{"type":"object","properties":{"id":{"type":"string"},"title":{"type":"string"},"description":{"type":"string"},"completed":{"type":"boolean"}}},"success":{"type":"boolean"},"message":{"type":"string"},"error":{"type":"string"},"messageId":{"type":"string"},"threadId":{"type":"string"}},"required":["type"]},"input_variable_description":{},"output_variable_description":{},"additional_notes":{},"mcp_server_name":"codebolt--taskplaner-addTask","mcp_server_function":{},"common_use_cases":{},"raw_content":"---\nname: addTask\ncbbaseinfo:\n  description: Adds a new task to the task management system via WebSocket communication. This method creates a new task with the provided description and stores it in the system for tracking and management.\ncbparameters:\n  parameters:\n    - name: task\n      typeName: string\n      description: The task description to be added. This should be a clear, descriptive string that explains what needs to be accomplished.\n  returns:\n    signatureTypeName: Promise<AddTaskResponse>\n    description: A promise that resolves with the response containing the newly created task information.\ndata:\n  name: addTask\n  category: taskplaner\n  link: addTask.md\n---"}}