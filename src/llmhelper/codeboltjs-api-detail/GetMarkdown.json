{"success":true,"data":{"id":16,"name":"GetMarkdown","category_id":12,"category_name":"Browser","description":"Retrieves the Markdown content of the current page.","short_description":"Get Markdown content of current page","function":"codebolt.browser.getMarkdown()","examples":"// Navigate to the page\nawait codebolt.browser.goToPage(\"https://example.com\");\n\n// Wait for page to load\nawait new Promise(resolve => setTimeout(resolve, 2000));\n\n// Retrieve the Markdown content of the current page\nconst markdownResult = await codebolt.browser.getMarkdown();\nconsole.log('âœ… Markdown retrieved:', {\n    success: markdownResult.success,\n    markdownLength: markdownResult.markdown ? markdownResult.markdown.length : 0\n});\n\n// Access the actual Markdown content\nif (markdownResult.success && markdownResult.markdown) {\n    console.log('Markdown content:', markdownResult.markdown);\n    // Save or process the Markdown as needed\n} else {\n    console.error('Failed to retrieve Markdown:', markdownResult.error);\n}","tags":"getMarkdown","created_at":"2025-07-09 11:44:04","updated_at":"2025-07-09 11:44:04","input_zod_schema":{},"output_zod_schema":{},"input_example":"const markdownResult = await codebolt.browser.getMarkdown();","output_example":"{\n  \"type\": \"getMarkdownResponse\",\n  \"markdown\": \"# Welcome to Example.com\\n\\nThis is a sample webpage with various content sections.\\n\\n## About Us\\n\\nWe provide excellent services...\\n\\n## Contact Information\\n\\n- Email: info@example.com\\n- Phone: +1-555-0123\",\n  \"content\": \"# Welcome to Example.com\\n\\nThis is a sample webpage with various content sections.\\n\\n## About Us\\n\\nWe provide excellent services...\\n\\n## Contact Information\\n\\n- Email: info@example.com\\n- Phone: +1-555-0123\",\n  \"success\": true,\n  \"message\": \"Markdown retrieved successfully\",\n  \"messageId\": \"msg_123456\",\n  \"threadId\": \"thread_789\"\n}","input_json_schema":"{\n  \"type\": \"object\",\n  \"properties\": {},\n  \"required\": [],\n  \"additionalProperties\": false\n}","output_json_schema":"{\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\n      \"type\": \"string\",\n      \"const\": \"getMarkdownResponse\",\n      \"description\": \"Always 'getMarkdownResponse'.\"\n    },\n    \"markdown\": {\n      \"type\": \"string\",\n      \"description\": \"The Markdown content of the current page.\"\n    },\n    \"content\": {\n      \"type\": \"string\",\n      \"description\": \"Alternative property for the Markdown content.\"\n    },\n    \"success\": {\n      \"type\": \"boolean\",\n      \"description\": \"Indicates if the operation was successful.\"\n    },\n    \"message\": {\n      \"type\": \"string\",\n      \"description\": \"A message with additional information.\"\n    },\n    \"error\": {\n      \"type\": \"string\",\n      \"description\": \"Error details if the operation failed.\"\n    },\n    \"messageId\": {\n      \"type\": \"string\",\n      \"description\": \"A unique identifier for the message.\"\n    },\n    \"threadId\": {\n      \"type\": \"string\",\n      \"description\": \"The thread identifier.\"\n    }\n  },\n  \"required\": [\"type\"],\n  \"additionalProperties\": false\n}","input_variable_description":"This method takes no parameters and retrieves the Markdown content of the current page.","output_variable_description":{},"additional_notes":{},"mcp_server_name":"codebolt--browser-getMarkdown","mcp_server_function":{},"common_use_cases":{},"raw_content":"---\nname: getMarkdown\ncbbaseinfo:\n  description: Retrieves the Markdown content of the current page.\ncbparameters:\n  parameters: []\n  returns:\n    signatureTypeName: Promise<GetMarkdownResponse>\n    description: A promise that resolves with the Markdown content.\n    typeArgs: []\ndata:\n  name: getMarkdown\n  category: browser\n  link: getMarkdown.md\n---\n\n### Response Structure\n\nThe method returns a Promise that resolves to a `GetMarkdownResponse` object with the following properties:\n\n- **`type`** (string): Always \"getMarkdownResponse\".\n- **`markdown`** (string, optional): The Markdown content of the current page\n- **`content`** (string, optional): Alternative property for the Markdown content\n- **`success`** (boolean, optional): Indicates if the operation was successful\n- **`message`** (string, optional): A message with additional information\n- **`error`** (string, optional): Error details if the operation failed\n- **`messageId`** (string, optional): A unique identifier for the message\n- **`threadId`** (string, optional): The thread identifier\n\n### Notes\n\n- The Markdown content is a structured text representation of the page content\n- This is useful for documentation, content analysis, or converting web content to readable format\n- The conversion maintains the logical structure of headings, lists, links, and other elements"}}