{"success":true,"data":{"id":5,"name":"GetAgentsDetail","category_id":11,"category_name":"Agent","description":"Retrieves detailed information for a list of specified agents.","short_description":"Get detailed information for specified agents or all agents","function":"codebolt.agent.getAgentsDetail(agentList: array)","examples":"// Example 1: Get details for a few specific agents\nasync function getSpecificAgentDetails() {\n  // First, get a list of available agents\n  const listResponse = await codebolt.agent.getAgentsList('downloaded');\n  \n  if (listResponse?.agents && listResponse.agents.length > 0) {\n    // Get the IDs of the first two agents\n    const agentIds = listResponse.agents.slice(0, 2).map(agent => agent.function.name);\n    \n    console.log(\"Requesting details for agent IDs:\", agentIds);\n    \n    // Get the details for the selected agents\n    const detailsResponse = await codebolt.agent.getAgentsDetail(agentIds);\n    console.log(\"Agent Details:\", detailsResponse);\n\n    if (detailsResponse.success) {\n      detailsResponse.payload.agents.forEach(agent => {\n        console.log(`- Name: ${agent.name}, Version: ${agent.version}, Status: ${agent.status}`);\n      });\n    }\n  }\n}\ngetSpecificAgentDetails();\n\n// Example 2: Get details for all available agents\nasync function getAllAgentDetails() {\n  // Pass an empty array to get details for all agents\n  const allDetails = await codebolt.agent.getAgentsDetail([]);\n  console.log(\"All Agent Details:\", allDetails);\n\n  if (allDetails.success) {\n    console.log(`Found details for ${allDetails.payload.agents.length} agents.`);\n  }\n}\ngetAllAgentDetails();","tags":"getAgentsDetail","created_at":"2025-07-09 08:09:19","updated_at":"2025-07-09 08:09:19","input_zod_schema":{},"output_zod_schema":{},"input_example":"const agentDetails = await codebolt.agent.getAgentsDetail([\n  \"agent-id-1\",\n  \"agent-id-2\"\n]);","output_example":"{\n  \"type\": \"agentsDetailResponse\",\n  \"payload\": {\n    \"agents\": [\n      {\n        \"id\": \"agent-id-1\",\n        \"name\": \"Code Generator Agent\",\n        \"description\": \"An agent that generates code based on specifications\",\n        \"capabilities\": [\"code-generation\", \"documentation\", \"testing\"],\n        \"isLocal\": true,\n        \"version\": \"1.0.0\",\n        \"status\": \"enabled\",\n        \"unique_id\": \"unique-agent-id-1\"\n      },\n      {\n        \"id\": \"agent-id-2\",\n        \"name\": \"Deployment Agent\",\n        \"description\": \"An agent that handles deployment tasks\",\n        \"capabilities\": [\"deployment\", \"ci-cd\", \"monitoring\"],\n        \"isLocal\": false,\n        \"version\": \"2.1.0\",\n        \"status\": \"enabled\",\n        \"unique_id\": \"unique-agent-id-2\"\n      }\n    ]\n  },\n  \"success\": true,\n  \"message\": \"Agent details retrieved successfully\",\n  \"messageId\": \"msg_123456\",\n  \"threadId\": \"thread_789\"\n}","input_json_schema":"{\n  \"type\": \"object\",\n  \"properties\": {\n    \"agentList\": {\n      \"type\": \"array\",\n      \"items\": { \"type\": \"string\" },\n      \"description\": \"Optional: An array of agent IDs to get details for. If the array is empty, it retrieves details for all agents. Defaults to an empty array.\",\n      \"default\": []\n    }\n  },\n  \"required\": [],\n  \"additionalProperties\": false\n}","output_json_schema":"{\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\n      \"type\": \"string\",\n      \"const\": \"agentsDetailResponse\",\n      \"description\": \"Always 'agentsDetailResponse'.\"\n    },\n    \"payload\": {\n      \"type\": \"object\",\n      \"description\": \"An object containing the agent details.\",\n      \"properties\": {\n        \"agents\": {\n          \"type\": \"array\",\n          \"description\": \"An array of agent detail objects.\",\n          \"items\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"type\": \"string\",\n                \"description\": \"The unique identifier of the agent.\"\n              },\n              \"name\": {\n                \"type\": \"string\",\n                \"description\": \"The display name of the agent.\"\n              },\n              \"description\": {\n                \"type\": \"string\",\n                \"description\": \"A description of the agent's capabilities.\"\n              },\n              \"capabilities\": {\n                \"type\": \"array\",\n                \"items\": { \"type\": \"string\" },\n                \"description\": \"An array of strings describing the agent's capabilities.\"\n              },\n              \"isLocal\": {\n                \"type\": \"boolean\",\n                \"description\": \"true if the agent is local, false otherwise.\"\n              },\n              \"version\": {\n                \"type\": \"string\",\n                \"description\": \"The version of the agent.\"\n              },\n              \"status\": {\n                \"type\": \"string\",\n                \"description\": \"The current status of the agent (e.g., 'enabled', 'disabled').\"\n              },\n              \"unique_id\": {\n                \"type\": \"string\",\n                \"description\": \"Another unique identifier for the agent.\"\n              }\n            },\n            \"required\": [\"id\", \"name\", \"description\", \"isLocal\", \"version\", \"status\", \"unique_id\"],\n            \"additionalProperties\": false\n          }\n        }\n      },\n      \"required\": [\"agents\"],\n      \"additionalProperties\": false\n    },\n    \"success\": {\n      \"type\": \"boolean\",\n      \"description\": \"Indicates if the operation was successful.\"\n    },\n    \"message\": {\n      \"type\": \"string\",\n      \"description\": \"A message with additional information.\"\n    },\n    \"error\": {\n      \"type\": \"string\",\n      \"description\": \"Error details if the operation failed.\"\n    },\n    \"messageId\": {\n      \"type\": \"string\",\n      \"description\": \"A unique identifier for the message.\"\n    },\n    \"threadId\": {\n      \"type\": \"string\",\n      \"description\": \"The thread identifier.\"\n    }\n  },\n  \"required\": [\"type\"],\n  \"additionalProperties\": false\n}","input_variable_description":"The `agentList` parameter is an array of agent IDs. If empty, details for all agents are retrieved.\nYou can obtain agent IDs from the `getAgentsList()` method. The ID is typically found in `agent.function.name`.","output_variable_description":{},"additional_notes":{},"mcp_server_name":"codebolt--agent-getAgentsDetail","mcp_server_function":{},"common_use_cases":{},"raw_content":"---\nname: GetAgentsDetail\ncbbaseinfo:\n  description: Retrieves detailed information for a list of specified agents.\ncbparameters:\n  parameters:\n    - name: agentList\n      typeName: array\n      description: \"Optional: An array of agent IDs to get details for. If the array is empty, it retrieves details for all agents. Defaults to an empty array.\"\n  returns:\n    signatureTypeName: Promise<AgentsDetailResponse>\n    description: A promise that resolves with an `AgentsDetailResponse` object containing the detailed information of the specified agents.\ndata:\n  name: getAgentsDetail\n  category: agent\n  link: getAgentsDetail.md\n---\n\n### Response Structure\n\nThe method returns a Promise that resolves to an `AgentsDetailResponse` object with the following properties:\n\n- **`type`** (string): Always \"agentsDetailResponse\".\n- **`payload`** (object, optional): An object containing the agent details.\n  - **`agents`** (array): An array of agent detail objects.\n- **`success`** (boolean, optional): Indicates if the operation was successful.\n- **`message`** (string, optional): A message with additional information.\n- **`error`** (string, optional): Error details if the operation failed.\n- **`messageId`** (string, optional): A unique identifier for the message.\n- **`threadId`** (string, optional): The thread identifier.\n\nEach agent in the `payload.agents` array has the following structure:\n- **`id`** (string): The unique identifier of the agent.\n- **`name`** (string): The display name of the agent.\n- **`description`** (string): A description of the agent's capabilities.\n- **`capabilities`** (array, optional): An array of strings describing the agent's capabilities.\n- **`isLocal`** (boolean): `true` if the agent is local, `false` otherwise.\n- **`version`** (string): The version of the agent.\n- **`status`** (string): The current status of the agent (e.g., \"enabled\", \"disabled\").\n- **`unique_id`** (string): Another unique identifier for the agent.\n\n### Usage Notes\n- You can obtain agent IDs from the `getAgentsList()` method. The ID is typically found in `agent.function.name`.\n- This function is useful for getting a deeper understanding of an agent's capabilities, version, and status before using it."}}