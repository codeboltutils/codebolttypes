{"success":true,"data":{"id":12,"name":"GetBrowserInfo","category_id":12,"category_name":"Browser","description":"Retrieves browser information like height, width, scroll position of the current page.","short_description":"Get browser viewport and scroll information","function":"codebolt.browser.getBrowserInfo()","examples":"// Navigate to a page\nawait codebolt.browser.goToPage(\"https://example.com\");\n\n// Wait for page to load\nawait new Promise(resolve => setTimeout(resolve, 2000));\n\n// Get browser information\nconst browserInfoResult = await codebolt.browser.getBrowserInfo();\nconsole.log('âœ… Browser info:', browserInfoResult);\n\n// The browser info contains viewport and scroll data\nif (browserInfoResult.success && browserInfoResult.payload?.info) {\n    const info = browserInfoResult.payload.info;\n    console.log('Browser dimensions and scroll position:', {\n        width: info.width,\n        height: info.height,\n        scrollX: info.scrollX,\n        scrollY: info.scrollY,\n        scrollHeight: info.scrollHeight\n    });\n} else {\n    console.error('Failed to get browser info:', browserInfoResult.error);\n}","tags":"getBrowserInfo","created_at":"2025-07-09 11:43:59","updated_at":"2025-07-09 11:43:59","input_zod_schema":{},"output_zod_schema":{},"input_example":"const browserInfoResult = await codebolt.browser.getBrowserInfo();","output_example":"{\n  \"type\": \"getBrowserInfoResponse\",\n  \"payload\": {\n    \"info\": {\n      \"width\": 1920,\n      \"height\": 1080,\n      \"devicePixelRatio\": 1,\n      \"scrollX\": 0,\n      \"scrollY\": 150,\n      \"pageYOffset\": 150,\n      \"pageXOffset\": 0,\n      \"windowWidth\": 1920,\n      \"windowHeight\": 1080,\n      \"offsetHeight\": 2500,\n      \"scrollHeight\": 2500\n    },\n    \"success\": true,\n    \"content\": \"Browser info retrieved successfully\"\n  },\n  \"eventId\": \"getBrowserInfo_123456\",\n  \"success\": true,\n  \"message\": \"Browser information retrieved successfully\",\n  \"messageId\": \"msg_123456\",\n  \"threadId\": \"thread_789\"\n}","input_json_schema":"{\n  \"type\": \"object\",\n  \"properties\": {},\n  \"required\": [],\n  \"additionalProperties\": false\n}","output_json_schema":"{\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\n      \"type\": \"string\",\n      \"const\": \"getBrowserInfoResponse\",\n      \"description\": \"Always 'getBrowserInfoResponse'.\"\n    },\n    \"payload\": {\n      \"type\": \"object\",\n      \"description\": \"Contains the response data including browser information.\",\n      \"properties\": {\n        \"info\": {\n          \"type\": \"object\",\n          \"description\": \"Browser viewport information.\",\n          \"properties\": {\n            \"width\": {\n              \"type\": \"number\",\n              \"description\": \"Browser viewport width in pixels.\"\n            },\n            \"height\": {\n              \"type\": \"number\",\n              \"description\": \"Browser viewport height in pixels.\"\n            },\n            \"devicePixelRatio\": {\n              \"type\": \"number\",\n              \"description\": \"Device pixel ratio.\"\n            },\n            \"scrollX\": {\n              \"type\": \"number\",\n              \"description\": \"Horizontal scroll position.\"\n            },\n            \"scrollY\": {\n              \"type\": \"number\",\n              \"description\": \"Vertical scroll position.\"\n            },\n            \"scrollHeight\": {\n              \"type\": \"number\",\n              \"description\": \"Total scrollable height.\"\n            }\n          }\n        }\n      }\n    },\n    \"eventId\": {\n      \"type\": \"string\",\n      \"description\": \"Event identifier for the action.\"\n    },\n    \"success\": {\n      \"type\": \"boolean\",\n      \"description\": \"Indicates if the operation was successful.\"\n    },\n    \"message\": {\n      \"type\": \"string\",\n      \"description\": \"A message with additional information.\"\n    },\n    \"error\": {\n      \"type\": \"string\",\n      \"description\": \"Error details if the operation failed.\"\n    },\n    \"messageId\": {\n      \"type\": \"string\",\n      \"description\": \"A unique identifier for the message.\"\n    },\n    \"threadId\": {\n      \"type\": \"string\",\n      \"description\": \"The thread identifier.\"\n    }\n  },\n  \"required\": [\"type\"],\n  \"additionalProperties\": false\n}","input_variable_description":"This method takes no parameters and retrieves comprehensive browser viewport and scroll information.","output_variable_description":{},"additional_notes":{},"mcp_server_name":"codebolt--browser-getBrowserInfo","mcp_server_function":{},"common_use_cases":{},"raw_content":"---\nname: getBrowserInfo\ncbbaseinfo:\n  description: Retrieves browser information like height, width, scroll position of the current page.\ncbparameters:\n  parameters: []\n  returns:\n    signatureTypeName: Promise<any>\n    description: 'A promise that resolves with the browser information.'\n    typeArgs: []\ndata:\n  name: getBrowserInfo\n  category: browser\n  link: getBrowserInfo.md\n---\n\n### Response Structure\n\nThe method returns a Promise that resolves to a `BrowserInfoResponse` object with comprehensive browser information.\n\n### Notes\n\n- The browser info provides comprehensive viewport and scroll information\n- This is useful for responsive design testing, scroll position tracking, and viewport-based automation\n- The response includes both current viewport dimensions and total page dimensions"}}